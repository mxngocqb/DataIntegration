version: '3.8'

services:
  hadoop-namenode:
    image: bde2020/hadoop-namenode:2.0.0-hadoop3.2.1-java8
    container_name: namenode
    hostname: namenode
    ports:
      - 9870:9870
    environment:
      - CLUSTER_NAME=stock
    env_file:
      - ./Configs/HadoopConfig/hadoop.env
    deploy:
      mode: replicated
      replicas: 1
      restart_policy:
        condition: on-failure
    volumes:
      - namenode_data:/hadoop/dfs/name
    networks:
      - bigdata_network

  hadoop-datanode:
    image: bde2020/hadoop-datanode:2.0.0-hadoop3.2.1-java8
    container_name: datanode-1
    hostname: datanode-1
    ports:
      - 9864:9864
    environment:
      - SERVICE_PRECONDITION=namenode:9870
    env_file:
      - ./Configs/HadoopConfig/hadoop.env
    deploy:
      mode: global
      restart_policy:
        condition: on-failure
    volumes:
      - datanode_data:/hadoop/dfs/data
    networks:
      - bigdata_network
    depends_on:
      - hadoop-namenode
  
  hadoop-datanode-2:
    image: bde2020/hadoop-datanode:2.0.0-hadoop3.2.1-java8
    container_name: datanode-2
    hostname: datanode-2
    ports:
      - 19864:9864
    environment:
      - SERVICE_PRECONDITION=namenode:9870
    env_file:
      - ./Configs/HadoopConfig/hadoop.env
    deploy:
      mode: global
      restart_policy:
        condition: on-failure
    volumes:
      - datanode2_data:/hadoop/dfs/data
    networks:
      - bigdata_network
    depends_on:
      - hadoop-namenode

  nifi:
    image: apache/nifi:1.16.0  # Use the latest NiFi Docker image
    container_name: nifi
    ports:
      - "8443:8443"  # Map the NiFi HTTP port inside the container to port 8443 on the host machine
    environment:
      - NIFI_WEB_HTTPS_PORT=8443  # NiFi is listening on port 8443 for HTTP access
      - NIFI_WEB_PROXY_HOST=26.243.250.90:8443  # Set the proxy host to ensure correct URL generation
      - SINGLE_USER_CREDENTIALS_USERNAME=admin  # Single user credentials for the NiFi UI
      - SINGLE_USER_CREDENTIALS_PASSWORD=ctsBtRBKHRAx69EqUghvvgEvjnaLjFEB  # Single user password
      - NIFI_ADMIN_ACCESS_PROVIDER=single-user-provider  # Use the single user provider
    volumes:
      - ./nifi_templates:/opt/nifi/nifi-current/templates
    networks:
      - bigdata_network  # Use the same network as the Hadoop/Hive stack

  zookeeper:
    image: 'bitnami/zookeeper:latest'
    ports:
      - '2181:2181'
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes

  kafka:
    image: 'bitnami/kafka:latest'
    ports:
      - '9092:9092'
    environment:
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://:9092
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT
      - KAFKA_INTER_BROKER_LISTENER_NAME=PLAINTEXT
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
    depends_on:
      - zookeeper

  elasticsearch:
    container_name: es-container
    image: docker.elastic.co/elasticsearch/elasticsearch:8.12.2
    environment:
      - xpack.security.enabled=false
      - "discovery.type=single-node"
    ports:
      - 9200:9200
    volumes:
      - esdata:/usr/share/elasticsearch/data

  kibana:
    container_name: kb-container
    image: docker.elastic.co/kibana/kibana:8.12.2
    environment:
      - ELASTICSEARCH_HOSTS=http://es-container:9200
    depends_on:
      - elasticsearch
    ports:
      - 5601:5601

volumes:
  namenode_data:
  datanode_data:
  datanode2_data:
  esdata:

networks:
  bigdata_network:
    driver: bridge
