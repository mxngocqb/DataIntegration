services:
  postgres:
    image: postgres:latest
    restart: unless-stopped
    container_name: postgres
    hostname: postgres
    ports:
      - 5432:5432
    environment:
      POSTGRES_USER: nifi
      POSTGRES_PASSWORD: nifi
      POSTGRES_DB: nifi
    volumes:
      - pg_vol:/var/lib/postgresql/data
    networks:
      - bigdata_network

  nifi:
    image: apache/nifi:latest
    container_name: nifi
    hostname: nifi
    ports:
      - "8443:8443"  # Map the NiFi HTTP port inside the container to port 8443 on the host machine
    environment:
      - NIFI_WEB_HTTPS_PORT=8443  # NiFi is listening on port 8443 for HTTP access
      - NIFI_WEB_PROXY_HOST=https://localhost:8443  # Set the proxy host to ensure correct URL generation
      - SINGLE_USER_CREDENTIALS_USERNAME=admin  # Single user credentials for the NiFi UI
      - SINGLE_USER_CREDENTIALS_PASSWORD=ctsBtRBKHRAx69EqUghvvgEvjnaLjFEB  # Single user password
      - NIFI_ADMIN_ACCESS_PROVIDER=single-user-provider  # Use the single user provider
    volumes:
      - nifi_vol:/opt/nifi/nifi-current/templates
    networks:
      - bigdata_network  # Use the same network as the Hadoop/Hive stack
      
  hadoop-namenode:
    image: bde2020/hadoop-namenode:2.0.0-hadoop3.2.1-java8
    container_name: namenode
    hostname: namenode
    ports:
      - 9870:9870
    environment:
      - CLUSTER_NAME=stock
    env_file:
      - ./Configs/HadoopConfig/hadoop.env
    deploy:
      mode: replicated
      replicas: 1
      restart_policy:
        condition: on-failure
    volumes:
      - namenode_vol:/hadoop/dfs/name
    networks:
      - bigdata_network

  hadoop-datanode:
    image: bde2020/hadoop-datanode:2.0.0-hadoop3.2.1-java8
    container_name: datanode_1
    hostname: datanode_1
    ports:
      - 9864:9864
    environment:
      - SERVICE_PRECONDITION=namenode:9870
    env_file:
      - ./Configs/HadoopConfig/hadoop.env
    deploy:
      mode: global
      restart_policy:
        condition: on-failure
    volumes:
      - datanode_vol1:/hadoop/dfs/data
    networks:
      - bigdata_network
    depends_on:
      - hadoop-namenode
  
  hadoop-datanode-2:
    image: bde2020/hadoop-datanode:2.0.0-hadoop3.2.1-java8
    container_name: datanode_2
    hostname: datanode_2
    ports:
      - 19864:9864
    environment:
      - SERVICE_PRECONDITION=namenode:9870
    env_file:
      - ./Configs/HadoopConfig/hadoop.env
    deploy:
      mode: global
      restart_policy:
        condition: on-failure
    volumes:
      - datanode_vol2:/hadoop/dfs/data
    networks:
      - bigdata_network
    depends_on:
      - hadoop-namenode

  elasticsearch:
    container_name: es_container
    hostname: elasticsearch
    image: docker.elastic.co/elasticsearch/elasticsearch:8.12.2
    environment:
      - xpack.security.enabled=false
      - "discovery.type=single-node"
    ports:
      - 9200:9200
    volumes:
      - es_vol:/usr/share/elasticsearch/data
    networks:
      - bigdata_network

  kibana:
    container_name: kb_container
    hostname: kibana
    image: docker.elastic.co/kibana/kibana:8.12.2
    environment:
      - ELASTICSEARCH_HOSTS=http://es_container:9200
    depends_on:
      - elasticsearch
    ports:
      - 5601:5601
    networks:
      - bigdata_network

volumes:
  pg_vol:
  nifi_vol:
  kaf_vol1:
  kaf_vol2:
  namenode_vol:
  datanode_vol1:
  datanode_vol2:
  es_vol:

networks:
  bigdata_network:
    driver: bridge
